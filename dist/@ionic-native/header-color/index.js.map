{"version":3,"sources":["../../../src/@ionic-native/plugins/header-color/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,sCAA2C;AAC3C,2CAAwE;AAExE;;;;;;;;;;;;;;;GAeG;AASH,IAAa,WAAW;IAAS,+BAAiB;IAAlD;;IAoBA,CAAC;IAlBC;;;;OAIG;IAMH,0BAAI,GAAJ,UAAK,KAAa,IAAkB,MAAM,CAAC,CAAC,CAAC;IAQ/C,kBAAC;AAAD,CApBA,AAoBC,CApBgC,wBAAiB,GAoBjD;AANM,sBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,iBAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,0BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AAPA;IALC,cAAO,CAAC;QACP,aAAa,EAAE,QAAQ;QACvB,WAAW,EAAE,SAAS;QACtB,SAAS,EAAE,SAAS;KACrB,CAAC;;;;uCAC2C;AAZlC,WAAW;IARvB,aAAM,CAAC;QACN,UAAU,EAAE,aAAa;QACzB,MAAM,EAAE,4BAA4B;QACpC,SAAS,EAAE,qBAAqB;QAChC,IAAI,EAAE,yDAAyD;QAC/D,SAAS,EAAE,CAAC,SAAS,CAAC;KACvB,CAAC;GAEW,WAAW,CAoBvB;AApBY,kCAAW","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\n\n/**\n * @name Header Color\n * @description\n * Cordova plugin to change color of header in Android Multitask View\n *\n * @usage\n * ```typescript\n * import { HeaderColor } from '@ionic-native/header-color';\n *\n * constructor(private headerColor: HeaderColor) { }\n *\n * ...\n *\n * this.headerColor.tint('#becb29');\n * ```\n */\n@Plugin({\n  pluginName: 'HeaderColor',\n  plugin: 'cordova-plugin-headercolor',\n  pluginRef: 'plugins.headerColor',\n  repo: 'https://github.com/tomloprod/cordova-plugin-headercolor',\n  platforms: ['Android']\n})\n\nexport class HeaderColor extends IonicNativePlugin {\n\n  /**\n   * Set a color to the task header\n   * @param color {string} The hex value of the color\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    callbackStyle: 'object',\n    successName: 'success',\n    errorName: 'failure'\n  })\n  tint(color: string): Promise<any> { return; }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}