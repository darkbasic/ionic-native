{"version":3,"sources":["../../../src/@ionic-native/plugins/rollbar/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,sCAA2C;AAC3C,2CAAwE;AAExE;;;;;;;;;;;;;;;;;GAiBG;AAWH,IAAa,OAAO;IAAS,2BAAiB;IAA9C;;IAeA,CAAC;IAbC;;;OAGG;IAEH,sBAAI,GAAJ,cAAuB,MAAM,CAAC,CAAC,CAAC;IAQlC,cAAC;AAAD,CAfA,AAeC,CAf4B,wBAAiB,GAe7C;AANM,kBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,iBAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,sBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AAPA;IADC,cAAO,EAAE;;;;mCACsB;AAPrB,OAAO;IAVnB,aAAM,CAAC;QACN,UAAU,EAAE,SAAS;QACrB,MAAM,EAAE,iCAAiC;QACzC,SAAS,EAAE,yBAAyB;QACpC,IAAI,EAAE,oDAAoD;QAC1D,OAAO,EAAE,4KAA4K;QACrL,gBAAgB,EAAE,CAAC,sBAAsB,EAAE,qBAAqB,CAAC;QACjE,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC;KAC9B,CAAC;GAEW,OAAO,CAenB;AAfY,0BAAO","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\n\n/**\n * @beta\n * @name Rollbar\n * @description\n * This plugin adds Rollbar App monitoring to your application\n *\n * @usage\n * ```typescript\n * import { Rollbar } from '@ionic-native/rollbar';\n *\n * constructor(private rollbar: Rollbar) { }\n *\n * ...\n *\n * this.rollbar.init();\n *\n * ```\n */\n@Plugin({\n  pluginName: 'Rollbar',\n  plugin: 'resgrid-cordova-plugins-rollbar',\n  pluginRef: 'cordova.plugins.Rollbar',\n  repo: 'https://github.com/Resgrid/cordova-plugins-rollbar',\n  install: 'ionic cordova plugin add resgrid-cordova-plugins-rollbar --variable ROLLBAR_ACCESS_TOKEN=\"YOUR_ROLLBAR_ACCEESS_TOKEN\" --variable ROLLBAR_ENVIRONMENT=\"ROLLBAR_ENVIRONMENT\"',\n  installVariables: ['ROLLBAR_ACCESS_TOKEN', 'ROLLBAR_ENVIRONMENT'],\n  platforms: ['Android', 'iOS']\n})\n\nexport class Rollbar extends IonicNativePlugin {\n\n  /**\n   * This function initializes the monitoring of your application\n   * @return {Promise<any>} Returns a promise that resolves when the plugin successfully initializes\n   */\n  @Cordova()\n  init(): Promise<any> { return; }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}