{"version":3,"sources":["../../../src/@ionic-native/plugins/admob-free/index.ts"],"names":[],"mappings":"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","file":"index.js","sourceRoot":"","sourcesContent":["import { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/fromEvent';\n\nexport interface AdMobFreeBannerConfig {\n  /**\n   * Ad Unit ID\n   */\n  id?: string;\n  /**\n   * Receiving test ad\n   */\n  isTesting?: boolean;\n  /**\n   * Auto show ad when loaded\n   */\n  autoShow?: boolean;\n  /**\n   * Set to true, to put banner at top\n   */\n  bannerAtTop?: boolean;\n  /**\n   * Set to true, to allow banner overlap WebView\n   */\n  overlap?: boolean;\n  /**\n   * Set to true to avoid ios7 status bar overlap\n   */\n  offsetTopBar?: boolean;\n  /**\n   * Banner  size\n   */\n  size?: string;\n}\n\nexport interface AdMobFreeInterstitialConfig {\n  /**\n   * Ad Unit ID\n   */\n  id?: string;\n  /**\n   * Receiving test ad\n   */\n  isTesting?: boolean;\n  /**\n   * Auto show ad when loaded\n   */\n  autoShow?: boolean;\n}\n\nexport interface AdMobFreeRewardVideoConfig {\n  /**\n   * Ad Unit ID\n   */\n  id?: string;\n  /**\n   * Receiving test ad\n   */\n  isTesting?: boolean;\n  /**\n   * Auto show ad when loaded\n   */\n  autoShow?: boolean;\n}\n\n/**\n * @name AdMob Free\n * @description\n *\n * @usage\n * ```typescript\n * import { AdMobFree, AdMobFreeBannerConfig } from '@ionic-native/admob-free';\n *\n *\n * constructor(private admobFree: AdMobFree) { }\n *\n *\n * ...\n *\n *\n * const bannerConfig: AdMobFreeBannerConfig = {\n *  // add your config here\n *  // for the sake of this example we will just use the test config\n *  isTesting: true,\n *  autoShow: true\n * };\n * this.admobFree.banner.config(bannerConfig);\n *\n * this.admobFree.banner.prepare()\n *   .then(() => {\n *     // banner Ad is ready\n *     // if we set autoShow to false, then we will need to call the show method here\n *   })\n *   .catch(e => console.log(e));\n *\n *\n * ```\n * @interfaces\n * AdMobFreeBannerConfig\n * AdMobFreeInterstitialConfig\n * AdMobFreeRewardVideoConfig\n * @classes\n * AdMobFreeBanner\n * AdMobFreeInterstitial\n * AdMobFreeRewardVideo\n */\n@Plugin({\n  pluginName: 'AdMobFree',\n  plugin: 'cordova-plugin-admob-free',\n  pluginRef: 'admob',\n  repo: 'https://github.com/ratson/cordova-plugin-admob-free',\n  platforms: ['Android', 'iOS']\n})\n\nexport class AdMobFree extends IonicNativePlugin {\n\n  /**\n   * Convenience object to get event names\n   * @type {Object}\n   */\n  events: any = {\n    BANNER_LOAD: 'admob.banner.events.LOAD',\n    BANNER_LOAD_FAIL: 'admob.banner.events.LOAD_FAIL',\n    BANNER_OPEN: 'admob.banner.events.OPEN',\n    BANNER_CLOSE: 'admob.banner.events.CLOSE',\n    BANNER_EXIT_APP: 'admob.banner.events.EXIT_APP',\n\n    INTERSTITIAL_LOAD: 'admob.interstitial.events.LOAD',\n    INTERSTITIAL_LOAD_FAIL: 'admob.interstitial.events.LOAD_FAIL',\n    INTERSTITIAL_OPEN: 'admob.interstitial.events.OPEN',\n    INTERSTITIAL_CLOSE: 'admob.interstitial.events.CLOSE',\n    INTERSTITIAL_EXIT_APP: 'admob.interstitial.events.EXIT_APP',\n\n    REWARD_VIDEO_LOAD: 'admob.rewardvideo.events.LOAD',\n    REWARD_VIDEO_LOAD_FAIL: 'admob.rewardvideo.events.LOAD_FAIL',\n    REWARD_VIDEO_OPEN: 'admob.rewardvideo.events.OPEN',\n    REWARD_VIDEO_CLOSE: 'admob.rewardvideo.events.CLOSE',\n    REWARD_VIDEO_EXIT_APP: 'admob.rewardvideo.events.EXIT_APP',\n    REWARD_VIDEO_START: 'admob.rewardvideo.events.START',\n    REWARD_VIDEO_REWARD: 'admob.rewardvideo.events.REWARD'\n  };\n\n  /**\n   * Watch an event\n   * @param event {string} event name\n   * @return {Observable<any>}\n   */\n  on(event: string): Observable<any> {\n    return Observable.fromEvent(document, event);\n  }\n\n  /**\n   * Returns the AdMobFreeBanner object\n   * @type {AdMobFreeBanner}\n   */\n  banner: AdMobFreeBanner = new AdMobFreeBanner();\n\n  /**\n   * Returns the AdMobFreeInterstitial object\n   * @type {AdMobFreeInterstitial}\n   */\n  interstitial: AdMobFreeInterstitial = new AdMobFreeInterstitial();\n\n  /**\n   * Returns the AdMobFreeRewardVideo object\n   * @type {AdMobFreeRewardVideo}\n   */\n  rewardVideo: AdMobFreeRewardVideo = new AdMobFreeRewardVideo();\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n/**\n * @hidden\n */\n@Plugin({\n  pluginName: 'AdMobFree',\n  plugin: 'cordova-plugin-admob-free',\n  pluginRef: 'admob.banner',\n})\nexport class AdMobFreeBanner {\n\n  /**\n   * Update config.\n   * @param options\n   * @return {AdMobFreeBannerConfig}\n   */\n  @Cordova({ sync: true })\n  config(options: AdMobFreeBannerConfig): AdMobFreeBannerConfig { return; }\n\n  /**\n   * Hide the banner.\n   * @return {Promise<any>}\n   */\n  @Cordova({ otherPromise: true })\n  hide(): Promise<any> { return; }\n\n  /**\n   * Create banner.\n   * @return {Promise<any>}\n   */\n  @Cordova({ otherPromise: true })\n  prepare(): Promise<any> { return; }\n\n  /**\n   * Remove the banner.\n   * @return {Promise<any>}\n   */\n  @Cordova({ otherPromise: true })\n  remove(): Promise<any> { return; }\n\n  /**\n   * Show the banner.\n   * @return {Promise<any>}\n   */\n  @Cordova({ otherPromise: true })\n  show(): Promise<any> { return; }\n\n}\n\n/**\n * @hidden\n */\n@Plugin({\n  pluginName: 'AdMobFree',\n  plugin: 'cordova-plugin-admob-free',\n  pluginRef: 'admob.interstitial',\n})\nexport class AdMobFreeInterstitial {\n\n  /**\n   * Update config.\n   * @param options\n   * @return {AdMobFreeInterstitialConfig}\n   */\n  @Cordova({ sync: true })\n  config(options: AdMobFreeInterstitialConfig): AdMobFreeInterstitialConfig { return; }\n\n  /**\n   * Check if interstitial is ready\n   * @return {Promise<any>}\n   */\n  @Cordova({ otherPromise: true })\n  isReady(): Promise<any> { return; }\n\n  /**\n   * Prepare interstitial\n   * @return {Promise<any>}\n   */\n  @Cordova({ otherPromise: true })\n  prepare(): Promise<any> { return; }\n\n  /**\n   * Show the interstitial\n   * @return {Promise<any>}\n   */\n  @Cordova({ otherPromise: true })\n  show(): Promise<any> { return; }\n\n}\n\n/**\n * @hidden\n */\n@Plugin({\n  pluginName: 'AdMobFree',\n  plugin: 'cordova-plugin-admob-free',\n  pluginRef: 'admob.rewardvideo',\n})\nexport class AdMobFreeRewardVideo {\n\n  /**\n   * Update config.\n   * @param options\n   * @return {AdMobFreeRewardVideoConfig}\n   */\n  @Cordova({ sync: true })\n  config(options: AdMobFreeRewardVideoConfig): AdMobFreeRewardVideoConfig { return; }\n\n  /**\n   * Check if reward video is ready\n   * @return {Promise<any>}\n   */\n  @Cordova({ otherPromise: true })\n  isReady(): Promise<any> { return; }\n\n  /**\n   * Prepare reward video\n   * @return {Promise<any>}\n   */\n  @Cordova({ otherPromise: true })\n  prepare(): Promise<any> { return; }\n\n  /**\n   * Show the reward video\n   * @return {Promise<any>}\n   */\n  @Cordova({ otherPromise: true })\n  show(): Promise<any> { return; }\n\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}