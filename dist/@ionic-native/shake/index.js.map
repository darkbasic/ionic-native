{"version":3,"sources":["../../../src/@ionic-native/plugins/shake/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,sCAA2C;AAC3C,2CAAwE;AACxE,8CAA6C;AAC7C;;;;;;;;;;;;;;;;;GAiBG;AASH,IAAa,KAAK;IAAS,yBAAiB;IAA5C;;IAoBA,CAAC;IAnBC;;;;OAIG;IAOH,0BAAU,GAAV,UAAW,WAAoB,IAAqB,MAAM,CAAC,CAAC,CAAC;IAQ/D,YAAC;AAAD,CApBA,AAoBC,CApB0B,wBAAiB,GAoB3C;AANM,gBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,iBAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,oBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AAPA;IANC,cAAO,CAAC;QACP,UAAU,EAAE,IAAI;QAChB,aAAa,EAAE,WAAW;QAC1B,YAAY,EAAE,CAAC;QACf,UAAU,EAAE,CAAC;KACd,CAAC;;;oCACgC,uBAAU;uCAAiB;AAZlD,KAAK;IARjB,aAAM,CAAC;QACN,UAAU,EAAE,OAAO;QACnB,MAAM,EAAE,sBAAsB;QAC9B,SAAS,EAAE,OAAO;QAClB,IAAI,EAAE,qDAAqD;QAC3D,SAAS,EAAE,CAAC,KAAK,CAAC;KACnB,CAAC;GAEW,KAAK,CAoBjB;AApBY,sBAAK","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\nimport { Observable } from 'rxjs/Observable';\n/**\n * @name Shake\n * @description Handles shake gesture\n * @usage\n * ```typescript\n * import { Shake } from '@ionic-native/shake';\n *\n * constructor(private shake: Shake) { }\n *\n * ...\n *\n * const watch = this.shake.startWatch(60).subscribe(() => {\n *   // do something\n *   });\n *\n * watch.unsubscribe();\n * ```\n */\n@Plugin({\n  pluginName: 'Shake',\n  plugin: 'cordova-plugin-shake',\n  pluginRef: 'shake',\n  repo: 'https://github.com/leecrossley/cordova-plugin-shake',\n  platforms: ['iOS']\n})\n\nexport class Shake extends IonicNativePlugin {\n  /**\n   * Watch for shake gesture\n   * @param sensitivity {number} Optional sensitivity parameter. Defaults to 40\n   * @returns {Observable<any>}\n   */\n  @Cordova({\n    observable: true,\n    clearFunction: 'stopWatch',\n    successIndex: 0,\n    errorIndex: 2\n  })\n  startWatch(sensitivity?: number): Observable<any> { return; }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}