{"version":3,"sources":["../../../src/@ionic-native/plugins/alipay/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,2CAAwE;AACxE,sCAA2C;AA8D3C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAkCG;AAWH,IAAa,MAAM;IAAS,0BAAiB;IAA7C;;IAcA,CAAC;IAbC;;;;OAIG;IAEH,oBAAG,GAAH,UAAI,KAAkB,IAAkB,MAAM,CAAC,CAAC,CAAC;IAOnD,aAAC;AAAD,CAdA,AAcC,CAd2B,wBAAiB,GAc5C;AANM,iBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,iBAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,qBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AANA;IADC,cAAO,EAAE;;;;iCACuC;AAPtC,MAAM;IAVlB,aAAM,CAAC;QACN,UAAU,EAAE,QAAQ;QACpB,MAAM,EAAE,qBAAqB;QAC7B,SAAS,EAAE,aAAa;QACxB,IAAI,EAAE,+CAA+C;QACrD,OAAO,EAAE,4EAA4E;QACrF,gBAAgB,EAAE,CAAC,QAAQ,CAAC;QAC5B,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC;KAC9B,CAAC;GAEW,MAAM,CAclB;AAdY,wBAAM","file":"index.js","sourceRoot":"","sourcesContent":["import { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\nimport { Injectable } from '@angular/core';\n\n\n\nexport interface AlipayOrder {\n  /**\n   * appId assigned by Alipay\n   */\n  app_id: string;\n\n  /**\n   * Api name.\n   * Should be: alipay.trade.app.pay\n   */\n  method: string;\n\n  /**\n   * Data format\n   * Default: \"JSON\"\n   */\n  format?: string;\n\n  /**\n   * Charset\n   * Possible values: \"UTF-8\", \"GBK\"\n   * Default: \"UTF-8\"\n   */\n  charset: string;\n\n  /**\n   * Sign method\n   * Default: 'RSA'\n   */\n  sign_type: string;\n\n  /**\n   * Sign value. Should be got from server side.\n   * Default: 'RSA'\n   */\n  sign: string;\n\n  /**\n   * Timestamp, formated like \"yyyy-MM-dd HH:mm:ss\", e.g. 2014-07-24 03:07:50\n   */\n  timestamp: string;\n\n  /**\n   * Api version. Fixed value '1.0'\n   */\n  version: string;\n\n  /**\n   * Notify url.\n   */\n  notify_url: string;\n\n  /**\n   * biz content. formated in json. see alipay doc for detail.\n   */\n  biz_content: string;\n}\n\n/**\n * @name Alipay\n * @description\n * This plugin is used for Alipay APP support. Integrated with the latest SDK.\n *\n * Requires Cordova plugin: `cordova-alipay-base`. For more info, please see the [Alipay plugin docs](https://github.com/xueron/cordova-alipay-base).\n *\n * @usage\n * ```typescript\n * import { Alipay, AlipayOrder } from '@ionic-native/alipay';\n *\n * constructor(private alipay: Alipay) {\n *\n * // Should get from server side with sign.\n * const alipayOrder: AlipayOrder = {\n *       ...\n *     };\n *\n *\n * this.alipay.pay(alipayOrder)\n *    .then(result => {\n *       console.log(result); // Success\n *    })\n *    .catch(error => {\n *       console.log(error); // Failed\n *    });\n *\n * }\n *\n *\n * ```\n *\n * @interfaces\n * AlipayOrder\n */\n@Plugin({\n  pluginName: 'Alipay',\n  plugin: 'cordova-alipay-base',\n  pluginRef: 'Alipay.Base',\n  repo: 'https://github.com/xueron/cordova-alipay-base',\n  install: 'ionic cordova plugin add cordova-alipay-base --variable APP_ID=your_app_id',\n  installVariables: ['APP_ID'],\n  platforms: ['Android', 'iOS']\n})\n\nexport class Alipay extends IonicNativePlugin {\n  /**\n   * Open Alipay to perform App pay\n   * @param order { AlipayOrder } alipay options\n   * @returns {Promise<any>} Returns a Promise that resolves with the success return, or rejects with an error.\n   */\n  @Cordova()\n  pay(order: AlipayOrder): Promise<any> { return; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}