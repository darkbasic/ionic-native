{"version":3,"sources":["../../../src/@ionic-native/plugins/pin-check/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,2CAAwE;AACxE,sCAA2C;AAE3C;;;;;;;;;;;;;;;;;;;;;;GAsBG;AASH,IAAa,QAAQ;IAAS,4BAAiB;IAA/C;;IAeA,CAAC;IAdC;;;OAGG;IAEH,6BAAU,GAAV;QACE,MAAM,CAAC;IACT,CAAC;IAOH,eAAC;AAAD,CAfA,AAeC,CAf6B,wBAAiB,GAe9C;AANM,mBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,iBAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,uBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AARA;IADC,cAAO,EAAE;;;;0CAGT;AARU,QAAQ;IARpB,aAAM,CAAC;QACN,UAAU,EAAE,UAAU;QACtB,MAAM,EAAE,yBAAyB;QACjC,SAAS,EAAE,0BAA0B;QACrC,IAAI,EAAE,uDAAuD;QAC7D,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC;KAC9B,CAAC;GAEW,QAAQ,CAepB;AAfY,4BAAQ","file":"index.js","sourceRoot":"","sourcesContent":["import { Cordova, Plugin, IonicNativePlugin } from '@ionic-native/core';\nimport { Injectable } from '@angular/core';\n\n/**\n * @name Pin Check \n * @description\n * This plugin is for use with Apache Cordova and allows your application to check whether pin/keyguard or passcode is setup on iOS and Android phones.\n *\n * Requires Cordova plugin: cordova-plugin-pincheck. For more info, please see the [PinCheck plugin docs](https://github.com/ohh2ahh/AppAvailability).\n *\n * @usage\n * ```typescript\n * import { PinCheck } from '@ionic-native/pin-check';\n * import { Platform } from 'ionic-angular';\n *\n * constructor(private pinCheck: PinCheck, private platform: Platform) { }\n *\n * ...\n *\n * this.pinCheck.isPinSetup()\n *   .then(\n *     (success: string) =>  console.log(\"pin is setup.\");,\n *     (error: string) => console.log(\"pin not setup.\");\n *   );\n * ```\n */\n@Plugin({\n  pluginName: 'PinCheck',\n  plugin: 'cordova-plugin-pincheck',\n  pluginRef: 'cordova.plugins.PinCheck',\n  repo: 'https://github.com/shangyilim/cordova-plugin-pincheck',\n  platforms: ['Android', 'iOS']\n})\n\nexport class PinCheck extends IonicNativePlugin {\n  /**\n   *  check whether pin/keyguard or passcode is setup    \n   * @returns {Promise<boolean>}\n   */\n  @Cordova()\n  isPinSetup(): Promise<boolean> {\n    return;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}