{"version":3,"sources":["../../../src/@ionic-native/plugins/admob-pro/index.ts"],"names":[],"mappings":"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","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, Plugin, IonicNativePlugin } from '@ionic-native/core';\nimport { Observable } from 'rxjs/Observable';\n\nexport type AdSize = 'SMART_BANNER' | 'BANNER' | 'MEDIUM_RECTANGLE' | 'FULL_BANNER' | 'LEADERBOARD' | 'SKYSCRAPER' | 'CUSTOM';\n\nexport interface AdMobOptions {\n\n  /**\n   * Banner ad ID\n   */\n  adId?: string;\n\n  /**\n   * Banner Ad Size, defaults to `SMART_BANNER`. IT can be: `SMART_BANNER`, `BANNER`, `MEDIUM_RECTANGLE`, `FULL_BANNER`, `LEADERBOARD`, `SKYSCRAPER`, or `CUSTOM`\n   */\n  adSize?: AdSize;\n\n  /**\n   * Banner width, valid when `adSize` is set to `CUSTOM`\n   */\n  width?: number;\n\n  /**\n   * Banner height, valid when `adSize` is set to `CUSTOM`\n   */\n  height?: number;\n\n  /**\n   * Allow banner to overlap webview, or else it will push webview up or down to avoid overlap. Defaults to false.\n   */\n  overlap?: boolean;\n\n  /**\n   * Position of banner ad. Defaults to `TOP_CENTER`. You can use the `AdMobPro.AD_POSITION` property to select other values.\n   */\n  position?: number;\n\n  /**\n   * X in pixels. Valid when `position` is set to `POS_XY`\n   */\n  x?: number;\n\n  /**\n   * Y in pixels. Valid when `position` is set to `POS_XY`\n   */\n  y?: number;\n\n  /**\n   * Set to true to receive test ad for testing purposes\n   */\n  isTesting?: boolean;\n\n  /**\n   * Auto show interstitial ad when loaded. Set to false if hope to control the show timing with prepareInterstitial/showInterstitial\n   */\n  autoShow?: boolean;\n\n  /**\n   * Re-create the banner on web view orientation change (not screen orientation), or else just move the banner. Default:true.\n   */\n  orientationRenew?: boolean;\n\n  /**\n   * Set extra color style for Ad\n   */\n  adExtras?: AdExtras;\n\n  /**\n   * License key for the plugin\n   */\n  license?: any;\n\n}\n\nexport interface AdExtras {\n\n  color_bg: string;\n\n  color_bg_top: string;\n\n  color_border: string;\n\n  color_link: string;\n\n  color_text: string;\n\n  color_url: string;\n\n}\n\n/**\n * @paid\n * @name AdMob Pro\n * @description\n * Plugin for Google Ads, including AdMob / DFP (DoubleClick for publisher) and mediations to other Ad networks.\n *\n * IMPORTANT NOTICE: this plugin takes a percentage out of your earnings if you profit more than $1,000. Read more about this on the plugin's repo. For a completely free alternative, see [AdMobPro Free](../admob-free).\n * @usage\n * ```typescript\n * import { AdMobPro } from '@ionic-native/admob-pro';\n * import { Platform } from 'ionic-angular';\n *\n * constructor(private admob: AdMobPro, private platform: Platform ) { }\n *\n * ionViewDidLoad() {\n *   this.admob.onAdDismiss()\n *     .subscribe(() => { console.log('User dismissed ad'); });\n * }\n *\n * onClick() {\n *   let adId;\n *   if(this.platform.is('android')) {\n *     adId = 'YOUR_ADID_ANDROID';\n *   } else if (this.platform.is('ios')) {\n *     adId = 'YOUR_ADID_IOS';\n *   }\n *   this.admob.prepareInterstitial({adId: adId})\n *     .then(() => { this.admob.showInterstitial(); });\n * }\n *\n * ```\n *\n * @interfaces\n * AdMobOptions\n * AdExtras\n */\n@Plugin({\n  pluginName: 'AdMob Pro',\n  plugin: 'cordova-plugin-admobpro',\n  pluginRef: 'AdMob',\n  repo: 'https://github.com/floatinghotpot/cordova-admob-pro',\n  platforms: ['Android', 'iOS', 'Windows Phone 8']\n})\n\nexport class AdMobPro extends IonicNativePlugin {\n\n  AD_POSITION: {\n    NO_CHANGE: number;\n    TOP_LEFT: number;\n    TOP_CENTER: number;\n    TOP_RIGHT: number;\n    LEFT: number;\n    CENTER: number;\n    RIGHT: number;\n    BOTTOM_LEFT: number;\n    BOTTOM_CENTER: number;\n    BOTTOM_RIGHT: number;\n    POS_XY: number;\n  } = {\n    NO_CHANGE: 0,\n    TOP_LEFT: 1,\n    TOP_CENTER: 2,\n    TOP_RIGHT: 3,\n    LEFT: 4,\n    CENTER: 5,\n    RIGHT: 6,\n    BOTTOM_LEFT: 7,\n    BOTTOM_CENTER: 8,\n    BOTTOM_RIGHT: 9,\n    POS_XY: 10\n  };\n\n  /**\n   * Create a banner\n   * @param adIdOrOptions {string | AdMobOptions} Ad ID or Options\n   * @returns {Promise<any>} Returns a Promise that resolves when the banner is created\n   */\n  @Cordova()\n  createBanner(adIdOrOptions: string | AdMobOptions): Promise<any> { return; }\n\n  /**\n   * Destroy the banner, remove it from screen.\n   */\n  @Cordova({\n    sync: true\n  })\n  removeBanner(): void { }\n\n  /**\n   * Show banner at position\n   * @param position {number} Position. Use `AdMobPro.AD_POSITION` to set values.\n   */\n  @Cordova({\n    sync: true\n  })\n  showBanner(position: number): void { }\n\n  /**\n   * Show banner at custom position\n   * @param x {number} Offset from screen left.\n   * @param y {number} Offset from screen top.\n   */\n  @Cordova({\n    sync: true\n  })\n  showBannerAtXY(x: number, y: number): void { }\n\n  /**\n   * Hide the banner, remove it from screen, but can show it later\n   */\n  @Cordova({\n    sync: true\n  })\n  hideBanner(): void { }\n\n  /**\n   * Prepare interstitial banner\n   * @param adIdOrOptions {string | AdMobOptions} Ad ID or Options\n   * @returns {Promise<any>} Returns a Promise that resolves when interstitial is prepared\n   */\n  @Cordova()\n  prepareInterstitial(adIdOrOptions: string | AdMobOptions): Promise<any> { return; }\n\n  /**\n   * Show interstitial ad when it's ready\n   */\n  @Cordova({\n    sync: true\n  })\n  showInterstitial(): void { }\n\n  /**\n   * Prepare a reward video ad\n   * @param adIdOrOptions {string | AdMobOptions} Ad ID or Options\n   * @returns {Promise<any>} Returns a Promise that resolves when the ad is prepared\n   */\n  @Cordova()\n  prepareRewardVideoAd(adIdOrOptions: string | AdMobOptions): Promise<any> { return; }\n\n  /**\n   * Show a reward video ad\n   */\n  @Cordova({\n    sync: true\n  })\n  showRewardVideoAd(): void { }\n\n  /**\n   * Sets the values for configuration and targeting\n   * @param options {AdMobOptions} Options\n   * @returns {Promise<any>} Returns a Promise that resolves when the options have been set\n   */\n  @Cordova()\n  setOptions(options: AdMobOptions): Promise<any> { return; }\n\n  /**\n   * Get user ad settings\n   * @returns {Promise<any>} Returns a promise that resolves with the ad settings\n   */\n  @Cordova()\n  getAdSettings(): Promise<any> { return; }\n\n  /**\n   * Triggered when failed to receive Ad\n   * @returns {Observable<any>}\n   */\n  @Cordova({\n    eventObservable: true,\n    event: 'onAdFailLoad',\n    element: document\n  })\n  onAdFailLoad(): Observable<any> { return; }\n\n  /**\n   * Triggered when Ad received\n   * @returns {Observable<any>}\n   */\n  @Cordova({\n    eventObservable: true,\n    event: 'onAdLoaded',\n    element: document\n  })\n  onAdLoaded(): Observable<any> { return; }\n\n  /**\n   * Triggered when Ad will be showed on screen\n   * @returns {Observable<any>}\n   */\n  @Cordova({\n    eventObservable: true,\n    event: 'onAdPresent',\n    element: document\n  })\n  onAdPresent(): Observable<any> { return; }\n\n  /**\n   * Triggered when user click the Ad, and will jump out of your App\n   * @returns {Observable<any>}\n   */\n  @Cordova({\n    eventObservable: true,\n    event: 'onAdLeaveApp',\n    element: document\n  })\n  onAdLeaveApp(): Observable<any> { return; }\n\n  /**\n   * Triggered when dismiss the Ad and back to your App\n   * @returns {Observable<any>}\n   */\n  @Cordova({\n    eventObservable: true,\n    event: 'onAdDismiss',\n    element: document\n  })\n  onAdDismiss(): Observable<any> { return; }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}