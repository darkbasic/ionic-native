{"version":3,"sources":["../../../src/@ionic-native/plugins/mixpanel/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,sCAA2C;AAC3C,2CAAwE;AAIxE;;;;;;;;;;;;;;;;;;;;GAoBG;AASH,IAAa,QAAQ;IAAS,4BAAiB;IAA/C;;IAiFA,CAAC;IA/EC;;;;;OAKG;IAEH,wBAAK,GAAL,UAAM,OAAe,EAAE,UAAkB,IAAkB,MAAM,CAAC,CAAC,CAAC;IAEpE;;;OAGG;IAEH,6BAAU,GAAV,cAA6B,MAAM,CAAC,CAAC,CAAC;IAEtC;;OAEG;IAEH,wBAAK,GAAL,cAAwB,MAAM,CAAC,CAAC,CAAC;IAEjC;;;;OAIG;IAEH,2BAAQ,GAAR,UAAS,UAAkB,IAAkB,MAAM,CAAC,CAAC,CAAC;IAEtD;;;;OAIG;IAEH,uBAAI,GAAJ,UAAK,KAAa,IAAkB,MAAM,CAAC,CAAC,CAAC;IAE7C;;;;OAIG;IAEH,0CAAuB,GAAvB,UAAwB,eAAoB,IAAkB,MAAM,CAAC,CAAC,CAAC;IAEvE;;;OAGG;IAEH,wBAAK,GAAL,cAAwB,MAAM,CAAC,CAAC,CAAC;IAEjC;;;;OAIG;IAEH,4BAAS,GAAT,UAAU,SAAiB,IAAkB,MAAM,CAAC,CAAC,CAAC;IAEtD;;;;;OAKG;IAKH,wBAAK,GAAL,UAAM,SAAiB,EAAE,eAAqB,IAAkB,MAAM,CAAC,CAAC,CAAC;IAQ3E,eAAC;AAAD,CAjFA,AAiFC,CAjF6B,wBAAiB,GAiF9C;AANM,mBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,iBAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,uBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AAvEA;IADC,cAAO,EAAE;;;;qCAC0D;AAOpE;IADC,cAAO,EAAE;;;;0CAC4B;AAMtC;IADC,cAAO,EAAE;;;;qCACuB;AAQjC;IADC,cAAO,EAAE;;;;wCAC4C;AAQtD;IADC,cAAO,EAAE;;;;oCACmC;AAQ7C;IADC,cAAO,EAAE;;;;uDAC6D;AAOvE;IADC,cAAO,EAAE;;;;qCACuB;AAQjC;IADC,cAAO,EAAE;;;;yCAC4C;AAYtD;IAJC,cAAO,CAAC;QACP,YAAY,EAAE,CAAC;QACf,UAAU,EAAE,CAAC;KACd,CAAC;;;;qCACuE;AAzE9D,QAAQ;IARpB,aAAM,CAAC;QACN,UAAU,EAAE,UAAU;QACtB,MAAM,EAAE,yBAAyB;QACjC,SAAS,EAAE,UAAU;QACrB,IAAI,EAAE,0DAA0D;QAChE,SAAS,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC;KACzC,CAAC;GAEW,QAAQ,CAiFpB;AAjFY,4BAAQ;AAkFrB;;GAEG;AAOH,IAAa,cAAc;IAAS,kCAAiB;IAArD;;IAgDA,CAAC;IA9CC;;;;OAIG;IAEH,iCAAQ,GAAR,UAAS,UAAkB,IAAkB,MAAM,CAAC,CAAC,CAAC;IAEtD;;;;OAIG;IAEH,kCAAS,GAAT,UAAU,gBAAqB,IAAkB,MAAM,CAAC,CAAC,CAAC;IAE1D;;;;OAIG;IAEH,kCAAS,GAAT,UAAU,MAAc,IAAkB,MAAM,CAAC,CAAC,CAAC;IAEnD;;;;OAIG;IAEH,4BAAG,GAAH,UAAI,gBAAqB,IAAkB,MAAM,CAAC,CAAC,CAAC;IAEpD;;;;OAIG;IAEH,gCAAO,GAAP,UAAQ,gBAAqB,IAAkB,MAAM,CAAC,CAAC,CAAC;IAQ1D,qBAAC;AAAD,CAhDA,AAgDC,CAhDmC,wBAAiB,GAgDpD;AANM,yBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,iBAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,6BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AAvCA;IADC,cAAO,EAAE;;;;8CAC4C;AAQtD;IADC,cAAO,EAAE;;;;+CACgD;AAQ1D;IADC,cAAO,EAAE;;;;+CACyC;AAQnD;IADC,cAAO,EAAE;;;;yCAC0C;AAQpD;IADC,cAAO,EAAE;;;;6CAC8C;AAxC7C,cAAc;IAN1B,aAAM,CAAC;QACN,MAAM,EAAE,yBAAyB;QACjC,SAAS,EAAE,iBAAiB;QAC5B,UAAU,EAAE,UAAU;KACvB,CAAC;GAEW,cAAc,CAgD1B;AAhDY,wCAAc","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, Plugin, IonicNativePlugin } from '@ionic-native/core';\n\ndeclare var mixpanel: any;\n\n/**\n * @name Mixpanel\n * @description\n * Cordova Plugin that wraps Mixpanel SDK for Android and iOS\n *\n * @usage\n * ```typescript\n * import { Mixpanel } from '@ionic-native/mixpanel';\n *\n * constructor(private mixpanel: Mixpanel, private mixpanelPeople: MixpanelPeople) { }\n *\n * ...\n *\n * this.mixpanel.init(token)\n *   .then(onSuccess)\n *   .catch(onError);\n *\n * ```\n * @classes\n * MixpanelPeople\n */\n@Plugin({\n  pluginName: 'Mixpanel',\n  plugin: 'cordova-plugin-mixpanel',\n  pluginRef: 'mixpanel',\n  repo: 'https://github.com/samzilverberg/cordova-mixpanel-plugin',\n  platforms: ['Android', 'Browser', 'iOS']\n})\n\nexport class Mixpanel extends IonicNativePlugin {\n\n  /**\n   *\n   * @param aliasId {string}\n   * @param originalId {string}\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  alias(aliasId: string, originalId: string): Promise<any> { return; }\n\n  /**\n   *\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  distinctId(): Promise<any> { return; }\n\n  /**\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  flush(): Promise<any> { return; }\n\n  /**\n   *\n   * @param distinctId {string}\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  identify(distinctId: string): Promise<any> { return; }\n\n  /**\n   *\n   * @param token {string}\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  init(token: string): Promise<any> { return; }\n\n  /**\n   *\n   * @param superProperties {any}\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  registerSuperProperties(superProperties: any): Promise<any> { return; }\n\n  /**\n   *\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  reset(): Promise<any> { return; }\n\n  /**\n   *\n   * @param eventName {string}\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  timeEvent(eventName: string): Promise<any> { return; }\n\n  /**\n   *\n   * @param eventName {string}\n   * @param eventProperties {any} optional\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    successIndex: 2,\n    errorIndex: 3\n  })\n  track(eventName: string, eventProperties?: any): Promise<any> { return; }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n/**\n * @hidden\n */\n@Plugin({\n  plugin: 'cordova-plugin-mixpanel',\n  pluginRef: 'mixpanel.people',\n  pluginName: 'Mixpanel'\n})\n\nexport class MixpanelPeople extends IonicNativePlugin {\n\n  /**\n   *\n   * @param distinctId {string}\n   * @return {Promise<any>}\n   */\n  @Cordova()\n  identify(distinctId: string): Promise<any> { return; }\n\n  /**\n   *\n   * @param peopleProperties {string}\n   * @return {Promise<any>}\n   */\n  @Cordova()\n  increment(peopleProperties: any): Promise<any> { return; }\n\n  /**\n   *\n   * @param pushId\n   * @return {Promise<any>}\n   */\n  @Cordova()\n  setPushId(pushId: string): Promise<any> { return; }\n\n  /**\n   *\n   * @param peopleProperties\n   * @return {Promise<any>}\n   */\n  @Cordova()\n  set(peopleProperties: any): Promise<any> { return; }\n\n  /**\n   *\n   * @param peopleProperties\n   * @return {Promise<any>}\n   */\n  @Cordova()\n  setOnce(peopleProperties: any): Promise<any> { return; }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}