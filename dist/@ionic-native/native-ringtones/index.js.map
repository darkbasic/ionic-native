{"version":3,"sources":["../../../src/@ionic-native/plugins/native-ringtones/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,2CAAwE;AACxE,sCAA2C;AAE3C;;;;;;;;;;;;;;;;;;;;;;GAsBG;AASH,IAAa,eAAe;IAAS,mCAAiB;IAAtD;;IA8BA,CAAC;IA5BC;;;OAGG;IAEH,qCAAW,GAAX,cAA8B,MAAM,CAAC,CAAC,CAAC;IAEvC;;;;OAIG;IAEH,sCAAY,GAAZ,UAAa,WAAmB,IAAkB,MAAM,CAAC,CAAC,CAAC;IAE3D;;;;OAIG;IAEH,sCAAY,GAAZ,UAAa,WAAmB,IAAkB,MAAM,CAAC,CAAC,CAAC;IAO7D,sBAAC;AAAD,CA9BA,AA8BC,CA9BoC,wBAAiB,GA8BrD;AANM,0BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,iBAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,8BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AAtBA;IADC,cAAO,EAAE;;;;kDAC6B;AAQvC;IADC,cAAO,EAAE;;;;mDACiD;AAQ3D;IADC,cAAO,EAAE;;;;mDACiD;AAvBhD,eAAe;IAR3B,aAAM,CAAC;QACN,UAAU,EAAE,kBAAkB;QAC9B,MAAM,EAAE,iCAAiC;QACzC,SAAS,EAAE,iCAAiC;QAC5C,IAAI,EAAE,gEAAgE;QACtE,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC;KAC9B,CAAC;GAEW,eAAe,CA8B3B;AA9BY,0CAAe","file":"index.js","sourceRoot":"","sourcesContent":["import { Cordova, Plugin, IonicNativePlugin } from '@ionic-native/core';\nimport { Injectable } from '@angular/core';\n\n/**\n * @beta\n * @name Native Ringtones\n * @description\n * The plugin helps get the native ringtones list on Android or IOS devices.\n * And you can also use this plugin to play or stop the native ringtones and custom ringtones(added in the www folder).\n *\n * @usage\n * ```\n * import { NativeRingtones } from '@ionic-native/native-ringtones';\n *\n *\n * constructor(private ringtones: NativeRingtones) { }\n *\n * ...\n * this.ringtones.getRingtone().then((ringtones) => { console.log(ringtones); });\n *\n * this.ringtones.playRingtone('assets/ringtones/sound_1.caf');\n *\n * this.ringtones.stopRingtone('assets/ringtones/sound_1.caf');\n *\n * ```\n */\n@Plugin({\n  pluginName: 'native-ringtones',\n  plugin: 'cordova-plugin-native-ringtones',\n  pluginRef: 'cordova.plugins.NativeRingtones',\n  repo: 'https://github.com/TongZhangzt/cordova-plugin-native-ringtones',\n  platforms: ['Android', 'iOS']\n})\n\nexport class NativeRingtones extends IonicNativePlugin {\n\n  /**\n   * Get the ringtone list of the device\n   * @return {Promise<any>} Returns a promise that resolves when ringtones found successfully\n   */\n  @Cordova()\n  getRingtone(): Promise<any> { return; }\n\n  /**\n   * This function starts playing the ringtone\n   * @param {string} ringtoneUri The path to the ringtone file\n   * @return {Promise<any>} Returns a promise\n   */\n  @Cordova()\n  playRingtone(ringtoneUri: string): Promise<any> { return; }\n\n  /**\n   * This function stops playing the ringtone\n   * @param {string} ringtoneUri The path to the ringtone file\n   * @return {Promise<any>} Returns a promise\n   */\n  @Cordova()\n  stopRingtone(ringtoneUri: string): Promise<any> { return; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}