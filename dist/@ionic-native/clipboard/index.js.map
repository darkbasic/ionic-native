{"version":3,"sources":["../../../src/@ionic-native/plugins/clipboard/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,sCAA2C;AAC3C,2CAAwE;AACxE;;;;;;;;;;;;;;;;;;;;;;;;;;GA0BG;AASH,IAAa,SAAS;IAAS,6BAAiB;IAAhD;;IAuBA,CAAC;IArBC;;;;OAIG;IAEH,wBAAI,GAAJ,UAAK,IAAY,IAAkB,MAAM,CAAC,CAAC,CAAC;IAE5C;;;OAGG;IAEH,yBAAK,GAAL,cAAwB,MAAM,CAAC,CAAC,CAAC;IAQnC,gBAAC;AAAD,CAvBA,AAuBC,CAvB8B,wBAAiB,GAuB/C;AANM,oBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,iBAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,wBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AAdA;IADC,cAAO,EAAE;;;;qCACkC;AAO5C;IADC,cAAO,EAAE;;;;sCACuB;AAftB,SAAS;IARrB,aAAM,CAAC;QACN,UAAU,EAAE,WAAW;QACvB,MAAM,EAAE,mBAAmB;QAC3B,SAAS,EAAE,2BAA2B;QACtC,IAAI,EAAE,8CAA8C;QACpD,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,EAAE,iBAAiB,CAAC;KACjD,CAAC;GAEW,SAAS,CAuBrB;AAvBY,8BAAS","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, Plugin, IonicNativePlugin } from '@ionic-native/core';\n/**\n * @name Clipboard\n * @description\n * Clipboard management plugin for Cordova that supports iOS, Android, and Windows Phone 8.\n *\n *\n * @usage\n * ```typescript\n * import { Clipboard } from '@ionic-native/clipboard';\n *\n * constructor(private clipboard: Clipboard) { }\n *\n * ...\n *\n *\n * this.clipboard.copy('Hello world');\n *\n * this.clipboard.paste().then(\n *    (resolve: string) => {\n *       alert(resolve);\n *     },\n *     (reject: string) => {\n *       alert('Error: ' + reject);\n *     }\n *   );\n * ```\n */\n@Plugin({\n  pluginName: 'Clipboard',\n  plugin: 'cordova-clipboard',\n  pluginRef: 'cordova.plugins.clipboard',\n  repo: 'https://github.com/ihadeed/cordova-clipboard',\n  platforms: ['Android', 'iOS', 'Windows Phone 8']\n})\n\nexport class Clipboard extends IonicNativePlugin {\n\n  /**\n   * Copies the given text\n   * @param {string} text Text that gets copied on the system clipboard\n   * @returns {Promise<any>} Returns a promise after the text has been copied\n   */\n  @Cordova()\n  copy(text: string): Promise<any> { return; }\n\n  /**\n   * Pastes the text stored in clipboard\n   * @returns {Promise<any>} Returns a promise after the text has been pasted\n   */\n  @Cordova()\n  paste(): Promise<any> { return; }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}